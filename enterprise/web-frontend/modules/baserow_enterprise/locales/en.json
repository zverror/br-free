{
  "clientHandler": {
    "cannotDisableAllAuthProvidersTitle": "Last enabled provider",
    "cannotDisableAllAuthProvidersDescription": "It is not possible to disable or delete last enabled provider."
  },
  "enterprise": {
    "license": "Enterprise",
    "sidebarTooltip": "Your account has access to the enterprise features globally",
    "rbac": "RBAC",
    "sso": "SSO",
    "licenseDescription": "Viewers are free with Baserow Enterprise. If a user has any other role, in any workspace then they will use a paid seat automatically.",
    "overflowWarning": "You have too many non-viewer users and have used up all of your paid seats. Change users to become viewers on each workspaces members page."
  },
  "trashType": {
    "team": "team"
  },
  "createTeamModal": {
    "title": "Create team",
    "invalidNameTitle": "Please use a different name",
    "invalidNameMessage": "This team name is already in use in the specified workspace."
  },
  "updateTeamModal": {
    "title": "Update {teamName}",
    "invalidNameTitle": "Please use a different name",
    "invalidNameMessage": "This team name is already in use in the specified workspace."
  },
  "manageTeamModals": {
    "subheading": "Teams allow you to give or restrict permissions in bulk to multiple people."
  },
  "manageTeamForm": {
    "submit": "Save",
    "nameTitle": "Name",
    "roleTitle": "Default role",
    "inviteMembers": "Add members",
    "membersTitle": "Members",
    "noSubjectsSelected": "Click '{buttonLabel}' to optionally add team users.",
    "roleHelpText": "User specific roles will always override Team roles."
  },
  "editTeamContext": {
    "edit": "Edit team",
    "remove": "Delete team"
  },
  "teamsTable": {
    "title": "{teamCount} teams in {workspaceName}",
    "createNew": "Create team",
    "nameColumn": "Name",
    "createdColumn": "Created on",
    "subjectsColumn": "Members",
    "roleColumn": "Default role",
    "roleHelpText": "Can be overriden with roles on databases and tables."
  },
  "subjectSampleField": {
    "titleAttr": "{subjectCount} members in this team."
  },
  "teamsSettings": {
    "teamsTabTitle": "Teams"
  },
  "adminType": {
    "AuditLog": "Audit log",
    "Authentication": "Authentication"
  },
  "auditLog": {
    "adminTitle": "Audit log",
    "workspaceTitle": "Audit log - {workspaceName}",
    "filterUserTitle": "User",
    "filterWorkspaceTitle": "Workspace",
    "filterActionTypeTitle": "Event Type",
    "filterFromTimestampTitle": "From Date",
    "filterFromTimestamp": "From Date",
    "filterToTimestampTitle": "To Date",
    "filterToTimestamp": "To Date",
    "user": "User",
    "workspace": "Workspace",
    "actionType": "Event Type",
    "description": "Description",
    "timestamp": "Timestamp",
    "ip_address": "IP Address",
    "exportToCsv": "Export to CSV",
    "exportModalTitle": "Export to CSV",
    "clearFilters": "Clear",
    "allUsers": "All Users",
    "allWorkspaces": "All Workspaces",
    "allActionTypes": "All Event Types"
  },
  "auditLogExportModal": {
    "title": "Export to CSV",
    "exportFilename": "Admin Audit Log Export - {date}",
    "exportWorkspaceFilename": " Workspace ({workspaceId}) Audit Log Export - {date}",
    "cancelledTitle": "Export failed",
    "cancelledDescription": "Something went wrong while exporting the audit log. Please try again."
  },
  "authProviders": {
    "title": "Authentication Providers",
    "noProviders": "No authentication providers configured yet.",
    "addProvider": "Add provider"
  },
  "authProviderTypes": {
    "password": "Email and password authentication",
    "saml": "SSO SAML provider",
    "ssoSamlProviderName": "SSO SAML: {domain}",
    "ssoSamlProviderNameUnconfigured": "Unconfigured SSO SAML"
  },
  "editAuthProviderMenuContext": {
    "edit": "Edit",
    "delete": "Delete"
  },
  "samlSettingsForm": {
    "domain": "SAML Domain",
    "domainPlaceholder": "Insert the company domain name...",
    "invalidDomain": "Invalid domain name",
    "domainAlreadyExists": "A SAML provider for this domain already exists",
    "metadata": "Metadata",
    "metadataPlaceholder": "Paste the Identity Provider metadata...",
    "invalidMetadata": "Invalid XML metadata for the Identity Provider",
    "relayStateUrl": "Default Relay State URL",
    "acsUrl": "Single Sign On URL",
    "providerIsVerified": "The provider has been verified",
    "samlResponseSettings": "SAML Response Attributes",
    "defaultAttrs": "Default",
    "customAttrs": "Custom",
    "emailAttrKey": "Email",
    "emailAttrKeyHelper": "The email address that will be used as username for the user.",
    "firstNameAttrKey": "First name",
    "firstNameAttrKeyHelper": "The first name of the user or the full name if 'Last name' is not provided.",
    "lastNameAttrKey": "Last name",
    "lastNameAttrKeyHelper": "Last name of the user (optional). Clear this value to provide the full name via 'First name'."
  },
  "createSettingsAuthProviderModal": {
    "title": "Add a new {type}"
  },
  "updateSettingsAuthProviderModal": {
    "title": "Edit {name}"
  },
  "deleteAuthProviderModal": {
    "title": "Delete {name}",
    "comment": "Do you really want to delete this {type}?"
  },
  "loginWithSaml": {
    "signInWithSaml": "Login with SAML SSO",
    "redirecting": "Redirecting to the Identity Provider...",
    "continueWithSaml": "Continue to the SAML SSO provider",
    "requestError": "This domain is not configured with SAML SSO",
    "loginText": "Already have a password?"
  },
  "loginError": {
    "title": "Something went wrong:",
    "loginText": "Already have an account?",
    "help": "Please contact your administrator for help.",
    "defaultErrorMessage": "it was not possible to complete the SSO login flow.",
    "errorSsoFeatureNotActive": "SSO feature is not active. Please contact your administrator.",
    "errorInvalidSamlRequest": "SAML request is invalid.",
    "errorInvalidSamlResponse": "SAML response is invalid.",
    "errorUserDeactivated": "user has been disabled.",
    "errorProviderDoesNotExist": "this authentication provider doesn't exist or is not available.",
    "errorAuthFlowError": "an error occurred during the authentication flow with the selected provider.",
    "errorDifferentProvider": "please use the provider that you originally signed up with.",
    "errorWorkspaceInvitationEmailMismatch": "your email address does not match with the invitation.",
    "errorSignupDisabled": "sign up has been disabled by the administrator."
  },
  "roles": {
    "admin": {
      "name": "Admin",
      "description": "Can fully configure and edit workspaces and applications."
    },
    "builder": {
      "name": "Builder",
      "description": "Can fully configure and edit applications."
    },
    "editor": {
      "name": "Editor",
      "description": "Can fully edit data but not configure applications or workspaces."
    },
    "commenter": {
      "name": "Commenter",
      "description": "Can only read and comment on data."
    },
    "viewer": {
      "name": "Viewer",
      "description": "Can only read data."
    },
    "noAccess": {
      "name": "No access",
      "description": "Can't access anything."
    },
    "noRoleLowPriority": {
      "name": "No role",
      "description": "Get default workspace role from their teams."
    }
  },
  "memberRolesModal": {
    "memberRolesDatabaseTabTitle": "Database",
    "memberRolesTableTabTitle": "Current Table",
    "error": {
      "title": "Could not fetch data",
      "description": "An error occurred while fetching the member data."
    }
  },
  "memberRolesTab": {
    "database": {
      "title": "{name} database",
      "selectMembers": "Select members",
      "everyoneHasAccess": "Everyone at {name} workspace can access this database.",
      "onlyYouHaveAccess": "Only you can access this database.",
      "warningTitle": "Other users might inherit access!",
      "warningMessage": "Other users might inherit access via their respective roles on the parent workspace.",
      "headerTooltip": "Database roles will override workspace roles."
    },
    "table": {
      "title": "{name} table",
      "selectMembers": "Select members",
      "everyoneHasAccess": "Everyone at {name} workspace can access this table.",
      "onlyYouHaveAccess": "Only you can access this table.",
      "warningTitle": "Other users might inherit access!",
      "warningMessage": "Other users might inherit access via their respective roles on the parent database or workspace.",
      "headerTooltip": "Table roles will override workspace and database roles."
    }
  },
  "memberRolesShareToggle": {
    "label": "Share with everyone at {name}",
    "subLabel": "{totalUserAmount} workspace members"
  },
  "memberRolesDatabaseContexItem": {
    "label": "Manage members",
    "additionalRoles": "Additional roles"
  },
  "memberRolesTableContexItem": {
    "label": "Manage members",
    "additionalRoles": "Additional roles"
  },
  "memberRolesMembersList": {
    "remove": "Remove",
    "teamMembersCount": "{count} team members",
    "adminHelpText": "Admins can restrict other admins roles.",
    "noMembers": "No members have been selected. Use the select button to add one."
  },
  "roleAssignmentModal": {
    "membersTab": "Members",
    "teamsTab": "Teams",
    "subjectTypeNameMembers": "members",
    "subjectTypeNameTeams": "teams"
  },
  "selectMembersList": {
    "searchPlaceholder": "Find members...",
    "selectedAmountLabel": "{count} members selected"
  },
  "selectTeamsList": {
    "searchPlaceholder": "Find teams...",
    "selectedAmountLabel": "{count} teams selected"
  },
  "selectSubjectsListFooter": {
    "invite": "Invite {count} {type}",
    "types": {
      "members": "members",
      "teams": "teams"
    },
    "helpTooltip": "Member role assignments override team role assignments."
  },
  "membersRoleField": {
    "noAccessHelpText": "This user requires explicit access to resources.",
    "adminHelpText": "Admins can restrict other admins roles."
  },
  "membersPagePlugin": {
    "roleHelpText": "Can be overriden with roles on databases and tables."
  },
  "oauthSettingsForm": {
    "providerName": "Name",
    "providerNamePlaceholder": "Custom provider name",
    "clientId": "Client ID",
    "clientIdPlaceholder": "Provider's client ID",
    "secret": "Secret",
    "secretPlaceholder": "Provider's secret",
    "baseUrl": "URL",
    "baseUrlPlaceholder": "Provider's base URL",
    "invalidBaseUrl": "The entered URL is not a valid provider URL",
    "callbackUrl": "Callback URL"
  },
  "loginButton": {
    "continueWith": "Continue with"
  },
  "enterpriseFeatures": {
    "sso": "Single Sign On",
    "rbac": "Role-based access control",
    "auditLogs": "Audit logs",
    "dataSync": "Data sync",
    "coBranding": "Co-branding logo replacement",
    "support": "Direct support"
  },
  "chatwootSupportSidebarWorkspace": {
    "directSupport": "Direct support"
  },
  "userTeamsField": {
    "no_records": "No teams"
  },
  "snapshotModalWarning": {
    "message": "Please be aware that a snapshot will include any permissions set on the application and its tables."
  },
  "exportWorkspaceModalWarning": {
    "message": "Please be aware that an export will not include any permissions set on the application and its tables."
  },
  "auditLogSidebarWorkspace": {
    "title": "Audit log"
  },
  "localBaserowUserSourceType": {
    "notConfigured": "Not configured"
  },
  "localBaserowUserSourceForm": {
    "description": "Every row in the table is a user account. Please select the matching fields in the table. The email field will be used to identify.",
    "emailFieldLabel": "Select email field",
    "emailFieldLabelPlaceholder": "Select a field...",
    "noFields": "No fields",
    "nameFieldLabel": "Select name field",
    "nameFieldPlaceholder": "Select a field...",
    "roleFieldLabel": "Select role field",
    "roleFieldPlaceholder": "Select a field..."
  },
  "appAuthProviderType": {
    "localBaserowPassword": "Email/Password",
    "commonSaml": "Saml SSO"
  },
  "localBaserowPasswordAppAuthProviderForm": {
    "passwordFieldLabel": "Select password field",
    "noFields": "No compatible fields"
  },
  "commonSamlSettingModal": {
    "title": "Edit provider",
    "relayStateTitle": "Default Relay State URL per domain (Click to copy)",
    "acsTitle": "Single Sign On URL per domain (Click to copy)",
    "preview": "Preview"
  },
  "commonSamlSettingForm": {
    "authProviderInError": "Please edit this provider to fix the error."
  },
  "enterpriseSettings": {
    "branding": "Branding",
    "showBaserowHelpMessage": "Show help message",
    "showBaserowHelpMessageDescription": "Indicates whether the help request message should be shown on the dashboard.",
    "deactivated": "Available in enterprise",
    "coBrandingLogo": "Logo",
    "coBrandingLogoDescription": "Replaces the Baserow logo for a custom co-branded alternative (176x29).",
    "uploadFileButton": "Upload image"
  },
  "enterpriseModal": {
    "title": "Upgrade to use the {name}",
    "description": "Your account doesn’t have access to the advanced/enterprise features. Upgrade to the advanced/enterprise version to begin using {name}. You can upgrade your account by getting a license. Click on the button below to view the pricing.",
    "viewPricing": "View pricing",
    "premium": "Premium",
    "enterprise": "Enterprise"
  },
  "authFormElementForm": {
    "userSource": "User source",
    "loginButtonLabel": "Login button label",
    "loginButtonLabelPlaceholder": "Enter the label..."
  },
  "authFormElement": {
    "email": "Email",
    "password": "Password",
    "emailPlaceholder": "Enter your email...",
    "passwordPlaceholder": "Enter your password...",
    "selectOrConfigureUserSourceFirst": "Choose a user source to begin using this login element."
  },
  "enterpriseDataSyncType": {
    "localBaserowTable": "Sync Baserow table",
    "jiraIssues": "Sync Jira issues",
    "githubIssues": "Sync GitHub issues",
    "gitlabIssues": "Sync GitLab issues",
    "hubspotContacts": "Sync HubSpot contacts"
  },
  "localBaserowTableDataSync": {
    "name": "Source table ID",
    "authorizing": "You're authorizing your account to select the data from the source table.",
    "workspace": "Workspace",
    "database": "Database",
    "table": "Table"
  },
  "jiraIssuesDataSync": {
    "jiraUrl": "Jira instance URL",
    "urlHelper": "The base URL of your Jira instance (e.g., https://your-domain.atlassian.net).",
    "projectKey": "Jira project key (optional)",
    "projectKeyHelper": "The project key of the Jira project (e.g., PROJ). Can be found by clicking on `Project settings` in Jira. If not provided, all the issues will be returned.",
    "jiraUsername": "Jira username",
    "usernameHelper": "The username of the Jira account used to authenticate. This is the email that you use to sign in.",
    "apiToken": "Jira API token",
    "apiTokenHelper": "The API token of the Jira account used for authentication. Can be created at https://id.atlassian.com/manage-profile/security/api-tokens."
  },
  "githubIssuesDataSync": {
    "owner": "Owner",
    "ownerHelper": "Username or owner of the repository. Typically in the top left corner `owner / repo`",
    "repo": "Repository",
    "repoHelper": "The name of the repository. Typically in the top left corner `owner / repo`",
    "apiToken": "API token",
    "apiTokenHelper": "Can be generated here https://github.com/settings/tokens by clicking on `Generate new token`, select `All repositories`, then under `Repository permissions` set `Issues` to `read-only`."
  },
  "gitlabIssuesDataSync": {
    "url": "Base URL",
    "urlHelper": "The base URL of your GitLab instance. (e.g. https://gitlab.com)",
    "projectId": "Project ID",
    "projectIdHelper": "The ID of the project where you want to sync the issues from. Can be found by going to your project page (e.g. https://gitlab.com/baserow/baserow), click on the three dots in the top right corner, and then on 'Copy project ID: 12345678'.",
    "accessToken": "Access token",
    "accessTokenHelper": "Can be generated here https://gitlab.com/-/user_settings/personal_access_tokens by clicking on `Add new token`, select `read_api`."
  },
  "hubspotContactsDataSync": {
    "accessToken": "Private app access token",
    "accessTokenHelper": "To generate a private app access token in HubSpot, click on Settings in the top bar, navigate to Integrations > Private Apps, and create a new private app. Assign the following scopes: crm.objects.contacts.read, crm.schemas.contacts.read, and crm.objects.custom.read. Finally, click Create app to generate the token."
  },
  "samlAuthLink": {
    "loginWithSaml": "Login with SAML",
    "placeholderWithSaml": "{login} with SAML",
    "provideEmail": "Provide your SAML account email",
    "emailPlaceholder": "Enter your email..."
  }
}
