version: '3'

services:
  backend:
    container_name: baserow_backend
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      BASEROW_PUBLIC_URL: ${BASEROW_BACKEND_URL}
      BASEROW_CADDY_ADDRESSES: ${BASEROW_CADDY_URL}
      REDIS_HOST: redis
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: baserow
      DATABASE_USER: baserow
      DATABASE_PASSWORD: baserow
    volumes:
      - baserow_data:/baserow/data
    depends_on:
      - db
      - redis
    restart: unless-stopped

  web-frontend:
    container_name: baserow_web_frontend
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      BASEROW_PUBLIC_URL: ${BASEROW_FRONTEND_URL}
      BASEROW_BACKEND_HOST: backend
      BASEROW_BACKEND_PORT: 8000
    restart: unless-stopped
    depends_on:
      - backend

  caddy:
    container_name: baserow_caddy
    image: caddy:2.7.6
    environment:
      BASEROW_PUBLIC_URL: ${BASEROW_CADDY_URL}
      BASEROW_CADDY_ADDRESSES: ${BASEROW_CADDY_URL}
    ports:
      - '8280:80'
      - '8243:443'
    volumes:
      - caddy_config:/config
      - caddy_data:/data
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
    restart: unless-stopped
    depends_on:
      - backend
      - web-frontend

  db:
    container_name: baserow_db
    image: postgres:11
    environment:
      POSTGRES_DB: baserow
      POSTGRES_USER: baserow
      POSTGRES_PASSWORD: baserow
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    container_name: baserow_redis
    image: redis:6
    volumes:
      - redisdata:/data
    restart: unless-stopped

volumes:
  baserow_data:
  pgdata:
  redisdata:
  caddy_config:
  caddy_data:
